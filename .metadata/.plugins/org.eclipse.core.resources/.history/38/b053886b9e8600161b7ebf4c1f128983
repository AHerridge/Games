package jrAlex.core.vector;

/**
 * Created on 9/13/2016.
 */

public class Vector
{
	protected double[] values;

	public Vector(double[] values)
	{
		this.values = values;
	}

	public Vector add(Vector b)
	{
		if (isSameSize(b))
		{
			Vector answer = new Vector(new double[values.length]);
			for (int i = 0; i < values.length; i++)
				answer.values[i] = this.values[i] + b.values[i];
			return answer;
		}
		return null;
	}

	public Vector sub(Vector b)
	{
		if (isSameSize(b))
		{
			Vector answer = new Vector(new double[values.length]);
			for (int i = 0; i < values.length; i++)
				answer.values[i] = this.values[i] - b.values[i];
			return answer;
		}
		return null;
	}

	public Vector mult(Vector b)
	{
		if (isSameSize(b))
		{
			Vector answer = new Vector(new double[values.length]);
			for (int i = 0; i < values.length; i++)
				answer.values[i] = this.values[i] * b.values[i];
			return answer;
		}
		return null;
	}

	public Vector mult(double scalar)
	{
		Vector answer = new Vector(new double[values.length]);
		for (int i = 0; i < values.length; i++)
			answer.values[i] = this.values[i] * scalar;
		return answer;
	}

	public double getValue(int index)
	{
		return values[index];
	}

	protected boolean isSameSize(Vector b)
	{
		System.err.println("Vectors are NOT the same size");
		return values.length == b.values.length;
	}
}
