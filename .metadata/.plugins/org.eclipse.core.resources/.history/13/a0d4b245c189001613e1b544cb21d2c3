package jrAlex.core;

import java.awt.Point;
import java.awt.event.ActionEvent;

import javax.swing.AbstractAction;

public class GameView extends WorldView
{
	private static final long serialVersionUID = 1L;

	public GameView(int scale)
	{
		super(scale);
		loadNext();
		addKeybind("W", new PlayerMoveAction(Direction.NORTH));
		addKeybind("S", new PlayerMoveAction(Direction.SOUTH));
		addKeybind("D", new PlayerMoveAction(Direction.EAST));
		addKeybind("A", new PlayerMoveAction(Direction.WEST));
		addKeybind("UP", new PlayerMoveAction(Direction.NORTH));
		addKeybind("DOWN", new PlayerMoveAction(Direction.SOUTH));
		addKeybind("RIGHT", new PlayerMoveAction(Direction.EAST));
		addKeybind("LEFT", new PlayerMoveAction(Direction.WEST));
		addKeybind("R", new AbstractAction()
		{
			private static final long serialVersionUID = 1L;

			@Override
			public void actionPerformed(ActionEvent e)
			{
				reloadWorld();
			}
		});
		addKeybind("Q", new AbstractAction()
		{
			private static final long serialVersionUID = 1L;

			@Override
			public void actionPerformed(ActionEvent e)
			{
				drawMinimap = !drawMinimap;
			}
		});
	}
	
	@Override
	public void update(int delta)
	{
		super.update(delta);
		if (world.checkWin())
			loadNext();
		
		Point playerCoords = world.getPlayerCoords();
		offsetCol = playerCoords.x;
		offsetRow = playerCoords.y;
	}

	class PlayerMoveAction extends AbstractAction
	{
		private static final long	serialVersionUID	= 1L;

		private Direction			dir;

		public PlayerMoveAction(Direction dir)
		{
			this.dir = dir;
		}

		@Override
		public void actionPerformed(ActionEvent arg0)
		{
			world.getPlayer().changeDir(dir);
			world.movePlayer();
		}
	}
}
